{
    "Version": "2012-10-17",
    "Statement": [
      {
        "Effect": "Allow",
        "Action": [
          "cloudformation:CreateStack",
          "cloudformation:DeleteStack",
          "cloudformation:UpdateStack",
          "cloudformation:DescribeStacks",
          "cloudformation:ListStacks",
          "cloudformation:DescribeStackEvents",
          "cloudformation:ContinueUpdateRollback",
          "cloudformation:GetTemplate",
          "cloudformation:DescribeStackResources",
          "cloudformation:CreateChangeSet"
          
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": [
            "eks:CreateNodegroup",
            "eks:UpdateNodegroupConfig",
            "eks:DeleteNodegroup",
            "eks:ListNodegroups",
            "eks:DescribeNodegroup",
            "eks:ListFargateProfiles",
            "eks:DescribeFargateProfile",
            "eks:CreateAddon",
            "eks:UpdateAddon",
            "eks:DeleteAddon",
            "eks:DescribeAddon",
            "eks:DescribeAddonVersions",
            "eks:ListAddons",
            "eks:DescribeAddonConfiguration",         
            "eks:ListUpdates",
            "eks:DescribeUpdate",
            "eks:CreateCluster",
            "eks:DeleteCluster",
            "eks:UpdateClusterVersion",
            "eks:UpdateClusterConfig",
            "eks:ListClusters",
            "eks:DescribeCluster",
            "eks:DescribeClusterVersions",
            
            "eks:AssociateEncryptionConfig",
            "eks:DescribeEncryptionConfig",

            "eks:AssociateIdentityProviderConfig",
            "eks:DescribeIdentityProviderConfig",
            "eks:DisassociateIdentityProviderConfig",
            "eks:ListIdentityProviderConfigs",

            "eks:TagResource",
            "eks:UntagResource",

            "eks:AccessKubernetesApi"
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": [
          "iam:CreateRole",
          "iam:AttachRolePolicy",
          "iam:DetachRolePolicy",
          "iam:ListAttachedRolePolicies",
          "iam:DeleteRole",
          "iam:TagRole",
          "iam:PassRole",
          "iam:GetRole",
          "iam:GetRolePolicy",
          "iam:DeleteRolePolicy",
          "iam:ListRolePolicies",
          "iam:CreateServiceLinkedRole",
          "iam:DeleteServiceLinkedRole",
          "iam:ListRoles",
          "iam:ListPolicies",
          "iam:UpdateAssumeRolePolicy",
          "iam:PutRolePolicy",
          "iam:UpdateRoleDescription",
          "iam:TagOpenIDConnectProvider",
          "iam:UntagOpenIDConnectProvider",
          "iam:GetOpenIDConnectProvider",
          "iam:CreateOpenIDConnectProvider",
          "iam:DeleteOpenIDConnectProvider",
          "iam:ListOpenIDConnectProviders",
          "iam:UpdateOpenIDConnectProviderThumbprint",
          "iam:AddClientIDToOpenIDConnectProvider",
          "iam:RemoveClientIDFromOpenIDConnectProvider"
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": [
          "ec2:DescribeInstances",
          "ec2:DescribeInstanceStatus",
          "ec2:DescribeSecurityGroups",
          "ec2:DescribeKeyPairs",
          "ec2:StartInstances",
          "ec2:StopInstances",
          "ec2:RebootInstances",
          "ec2:DescribeInstanceTypeOfferings",
          "ec2:CreateTags",
          "ec2:DeleteTags",
          
          "ec2:DescribeVolumes",
          "ec2:DeleteVolume",
          "ec2:CreateVolume",

          "ec2:CreateInternetGateway",
          "ec2:AttachInternetGateway",
          "ec2:DescribeInternetGateways",
          "ec2:DetachInternetGateway",
          "ec2:DeleteInternetGateway",
  
          "ec2:AllocateAddress",
          "ec2:ReleaseAddress",
          "ec2:DescribeAddresses",
  
          "ec2:CreateVpc",
          "ec2:DeleteVpc",
          "ec2:ModifyVpcAttribute",
          "ec2:DescribeVpcs",
  
          "ec2:CreateSubnet",
          "ec2:DescribeSubnets",
          "ec2:DeleteSubnet",
          "ec2:ModifySubnetAttribute",
          "ec2:DeleteSubnet",

  
          "ec2:CreateRouteTable",
          "ec2:DescribeRouteTables",
          "ec2:AssociateRouteTable",
          "ec2:DisassociateRouteTable",
          "ec2:DeleteRouteTable",
          "ec2:CreateRoute",
          "ec2:ReplaceRoute",
          "ec2:DeleteRoute",
  
          "ec2:CreateSecurityGroup",
          "ec2:DeleteSecurityGroup",
  
          "ec2:DescribeNetworkInterfaces",
          "ec2:CreateNatGateway",
          "ec2:DeleteNatGateway",
          "ec2:DescribeNatGateways",
          "ec2:DetachInternetGateway",
          "ec2:DeleteInternetGateway",

          "ec2:AuthorizeSecurityGroupIngress",
          "ec2:AuthorizeSecurityGroupEgress",
          "ec2:RevokeSecurityGroupIngress",
          "ec2:RevokeSecurityGroupEgress",

          "ec2:CreateNetworkInterface",
          "ec2:DeleteNetworkInterface",
          "ec2:ModifyNetworkInterfaceAttribute",
          
          "ec2:CreateLaunchTemplate",
          "ec2:CreateLaunchTemplateVersion",
          "ec2:DescribeLaunchTemplates",
          "ec2:DescribeLaunchTemplateVersions",
          "ec2:DeleteLaunchTemplate",
          "ec2:RunInstances"
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": [
            "elasticloadbalancing:CreateLoadBalancer",
            "elasticloadbalancing:DeleteLoadBalancer",
            "elasticloadbalancing:DescribeLoadBalancers",
            "elasticloadbalancing:AddTags",
            "elasticloadbalancing:RemoveTags"
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": [
          "autoscaling:CreateAutoScalingGroup",
          "autoscaling:UpdateAutoScalingGroup",
          "autoscaling:DeleteAutoScalingGroup",
          "autoscaling:DescribeAutoScalingGroups",
          "autoscaling:DescribeScalingActivities",
          "autoscaling:SetDesiredCapacity",
          "autoscaling:TerminateInstanceInAutoScalingGroup",
          "autoscaling:AttachLoadBalancerTargetGroups",
          "autoscaling:DetachLoadBalancerTargetGroups"
        ],
        "Resource": "*"
      },
      {
        "Effect": "Allow",
        "Action": [
            "s3:ListBucket",
            "s3:GetObject",
            "s3:PutObject"
        ],
        "Resource": [
            "arn:aws:s3:::terraform-state-bucket-g1-2403",
            "arn:aws:s3:::terraform-state-bucket-g1-2403/*"
        ]
      },
      {
        "Effect": "Allow",
        "Action": [
            "ssm:DescribeInstanceInformation",
            "ssm:SendCommand",
            "ssm:GetCommandInvocation",
            "ssm:StartSession",
            "ec2messages:GetMessages",
            "ec2messages:AcknowledgeMessage",
            "ec2messages:SendReply"
        ],
        "Resource": "*"
      }
    ]
  }

